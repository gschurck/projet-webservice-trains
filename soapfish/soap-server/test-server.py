# flake8:noqa
# isort:skip_file
##############################################################################
# Note: Generated by soapfish.wsdl2py at 2023-01-13 22:45:07.065169+00:00
#       Try to avoid editing it if you might need to regenerate it.
##############################################################################

from soapfish import soap, xsd

BaseHeader = xsd.ComplexType


##############################################################################
# Schemas


# http://code.google.com/p/soapfish/stock.xsd


class GetStockPrice(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    company = xsd.Element(xsd.String, minOccurs=1)
    datetime = xsd.Element(xsd.DateTime, minOccurs=1)

    @classmethod
    def create(cls, company, datetime):
        instance = cls()
        instance.company = company
        instance.datetime = datetime
        return instance


class StockPrice(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    price = xsd.Element(xsd.Integer, minOccurs=1)

    @classmethod
    def create(cls, price):
        instance = cls()
        instance.price = price
        return instance


Schema_74cb6 = xsd.Schema(
    imports=[],
    includes=[],
    targetNamespace='http://code.google.com/p/soapfish/stock.xsd',
    elementFormDefault='unqualified',
    simpleTypes=[],
    attributeGroups=[],
    groups=[],
    complexTypes=[GetStockPrice, StockPrice],
    elements={'getStockPrice': xsd.Element(GetStockPrice), 'stockPrice': xsd.Element(StockPrice)},
)


##############################################################################
# Operations


def GetStockPrice(request, getStockPrice):
    # TODO: Put your implementation here.
    return {'stockPrice': StockPrice.create(0)}


##############################################################################
# Methods


GetStockPrice_method = xsd.Method(
    function=GetStockPrice,
    soapAction='http://code.google.com/p/soapfish/stock/get_stock_price',
    input='getStockPrice',
    inputPartName='body',
    output='stockPrice',
    outputPartName='body',
    operationName='GetStockPrice',
    style='document',
)

##############################################################################
# SOAP Service


ServicePort_SERVICE = soap.Service(
    name='ServicePort',
    targetNamespace='http://code.google.com/p/soapfish/stock.wsdl',
    location='${scheme}://${host}/stock',
    schemas=[Schema_74cb6],
    version=soap.SOAPVersion.SOAP11,
    methods=[GetStockPrice_method],
)

# start server
if __name__ == '__main__':
    from wsgiref.simple_server import make_server
    from soapfish import soap_dispatch

    dispatcher = soap_dispatch.SOAPDispatcher(ServicePort_SERVICE)
    app = soap_dispatch.WsgiSoapApplication(dispatcher)

    print('Serving HTTP on port 8000...')
    httpd = make_server('', 8000, app)
    httpd.serve_forever()

##############################################################################


# NOTE: Uncomment the following lines to turn on dispatching for Django:
# from soapfish.django_ import django_dispatcher
# dispatcher = django_dispatcher(ServicePort_SERVICE)


# NOTE: Put these lines in the urls.py for your project or application:
# urlpatterns += patterns('',
#     (r'^stock$', '<module>.dispatcher'),
# )
